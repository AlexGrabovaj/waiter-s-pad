{"version":3,"sources":["pad/inputs/Line.js","pad/inputs/Button.js","pad/Field.js","pad/Pad.js","App.js","index.js"],"names":["PadLine","type","className","line","rest","props","value","count","onChange","e","preventDefault","onUpdateLine","key","target","onClick","removeLine","PadButton","downloadAsCsv","data","encodedUri","encodeURI","link","document","createElement","setAttribute","Date","now","click","Lines","lines","Object","keys","map","index","id","PadField","state","lineCounter","0","savePad","parserOpt","fields","parser","Parser","ideas","values","parsedIdeas","parse","savedFile","clear","addLine","lineKey","newLine","setState","updateLine","Form","onSubmit","this","bind","Component","Pad","Container","Row","Col","xs","React","App","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2849e86e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PadLine({type='', className = '', line, ...rest}) {\r\n  const props = {\r\n    type: `${type || line.type || 'text'}`,\r\n    value: line.value\r\n  }\r\n\r\n  const handleDeletion = (e) => {\r\n    e.preventDefault();\r\n    rest.removeLine(line);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    rest.onUpdateLine(line.key, e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={`pad-line ${className} ${line.className || ''}`}>\r\n      <span className='pad-line-count'>{rest.count}.</span>\r\n      <input className = 'pad-line-input' onChange={handleChange}{...props}/>\r\n      <i className='pad-line-delete fa fa-minus' onClick={handleDeletion}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PadLine;\r\n","import React from \"react\";\r\n\r\nfunction PadButton({ className = \"\", ...rest }) {\r\n  return (\r\n    <>\r\n      <button type='button' \r\n        className={`pad-button ${className}`}\r\n        {...rest}\r\n        ></button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PadButton;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"reactstrap\";\r\nimport PadLine from \"./inputs/Line\";\r\nimport PadButton from \"./inputs/Button\";\r\nimport { Parser } from \"json2csv\";\r\n\r\n\r\nconst downloadAsCsv = (data) => { //TODO get this out of here\r\n  const encodedUri = encodeURI(data);\r\n  var link = document.createElement(\"a\");\r\n  link.setAttribute(\"href\", encodedUri);\r\n  link.setAttribute(\"download\", `idea_${Date.now()}.csv`);\r\n  link.click();\r\n}\r\n\r\nfunction Lines({ lines = [] , removeLine = ()=>{}, onUpdateLine = ()=>{}}) {\r\n  return Object.keys(lines).map((key, index ) => {\r\n    var line = lines[key];\r\n    return <PadLine key={line.key} \r\n      id={`line_`+line.key}\r\n      line={line} \r\n      removeLine={removeLine}\r\n      onUpdateLine={onUpdateLine}\r\n      count={index+1}\r\n      />;\r\n  });\r\n}\r\n\r\nclass PadField extends Component {\r\n  state = {\r\n    lineCounter: 0,\r\n    lines: {\r\n      0:{\r\n        key: 0,\r\n        value: ''\r\n      },\r\n    },\r\n  };\r\n  savePad = (e) => {\r\n    e.preventDefault()\r\n    if (this.state.lineCounter === 0) {\r\n      return\r\n    }\r\n    const fields = [\"key\", \"value\"]\r\n    const parserOpt = {fields}\r\n    const parser = new Parser(parserOpt) \r\n    const ideas = Object.values(this.state.lines)\r\n    const parsedIdeas = parser.parse(ideas)\r\n    \r\n    const savedFile = `data:text/csv;charset=utf-8,${parsedIdeas}`; \r\n    downloadAsCsv(savedFile)\r\n    this.clear()\r\n  };\r\n\r\n  addLine = (e) => {\r\n    e.preventDefault();\r\n    var lineKey = this.state.lineCounter+1,\r\n        newLine = {\r\n          key: lineKey,\r\n          value: ''\r\n        },\r\n        lines = {...this.state.lines};\r\n        lines[lineKey] = newLine;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      lineCounter: lineKey,\r\n      lines: lines\r\n    });\r\n  };\r\n\r\n  updateLine = (key, value) => {\r\n    var lines = {... this.state.lines};\r\n\r\n    if (lines[key]) {\r\n      lines[key].value = value;\r\n      this.setState({\r\n        ...this.state,\r\n        lines: lines\r\n      });\r\n    }\r\n  };\r\n\r\n  removeLine = (line) => {\r\n    const lines = {...this.state.lines}\r\n    if (line.key in this.state.lines) {\r\n        delete lines[line.key];\r\n        this.setState({\r\n          ...this.state,\r\n          lines: lines,\r\n        });\r\n      }\r\n  };\r\n\r\n  clear = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      lineCounter: 0,\r\n      lines: {\r\n        0:{\r\n          key: 0,\r\n          value: ''\r\n        },\r\n      },\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.savePad}>\r\n        <div className=\"pad-top-buttons\">\r\n          {/* <PadButton> Options </PadButton> */}\r\n          <PadButton onClick={this.clear}> Clear </PadButton>\r\n          <PadButton onClick={this.savePad}> Save </PadButton>\r\n        </div>\r\n        <div className=\"pad-scroll\">\r\n          <div className=\"pad-field\">\r\n            <div className=\"pad-lines\">\r\n              <Lines \r\n                lines={this.state.lines}\r\n                removeLine={this.removeLine.bind(this)}\r\n                onUpdateLine={this.updateLine.bind(this)}\r\n              />\r\n\r\n              <button className=\"pad-add-line-button\"\r\n                type=\"button\"\r\n                onClick={(e) => this.addLine(e)}\r\n              >\r\n                <i className=\"fa fa-plus mr-2\"> </i>\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PadField;\r\n","import React from \"react\";\r\nimport \"./pad.scss\";\r\nimport PadField from \"./Field.js\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\n\r\nclass Pad extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"pad-frame\">\r\n        <Row>\r\n          <Col xs=\"12\">\r\n            <div className=\"pad-header\"> Waiter's Pad </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\">\r\n            <PadField />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pad;\r\n","import React from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\"\r\nimport \"./styles.scss\";\r\n\r\nimport Pad from \"./pad/Pad\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Pad />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}